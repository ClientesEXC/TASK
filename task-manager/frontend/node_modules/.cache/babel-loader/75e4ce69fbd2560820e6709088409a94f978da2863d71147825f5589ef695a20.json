{"ast":null,"code":"import _objectSpread from\"C:/Users/Silvia/WebstormProjects/TASK/task-manager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import Calendar from'react-calendar';import{Plus,Edit2,Trash2,Calendar as CalendarIcon,Layout,X,DollarSign,Clock,Search,Archive,ChevronDown,ChevronUp,Eye,RotateCcw,Filter}from'lucide-react';import'react-calendar/dist/Calendar.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_URL='http://localhost:3001/api';const statusLabels={cotizacion:'Cotización',en_proceso:'En Proceso',terminado:'Terminado',entregado:'Entregado'};const months=['Enero','Febrero','Marzo','Abril','Mayo','Junio','Julio','Agosto','Septiembre','Octubre','Noviembre','Diciembre'];function TaskManager(_ref){let{updateTabData}=_ref;const[tasks,setTasks]=useState([]);const[filteredTasks,setFilteredTasks]=useState([]);const[archivedTasks,setArchivedTasks]=useState([]);const[archivedStats,setArchivedStats]=useState([]);const[searchTerm,setSearchTerm]=useState('');const[view,setView]=useState('kanban');const[showModal,setShowModal]=useState(false);const[showPaymentModal,setShowPaymentModal]=useState(false);const[showArchivedModal,setShowArchivedModal]=useState(false);const[editingTask,setEditingTask]=useState(null);const[selectedTaskForPayment,setSelectedTaskForPayment]=useState(null);const[payments,setPayments]=useState([]);const[expandedArchiveMonths,setExpandedArchiveMonths]=useState({});const[selectedArchiveFilter,setSelectedArchiveFilter]=useState({year:null,month:null});const[formData,setFormData]=useState({title:'',client_name:'',price:0,status:'cotizacion',description:'',due_date:''});const[tempPayments,setTempPayments]=useState([]);const[newPayment,setNewPayment]=useState({amount:'',payment_date:new Date().toISOString().split('T')[0],notes:''});useEffect(()=>{fetchTasks();fetchArchivedStats();// Actualizar cada día a medianoche\nconst now=new Date();const tomorrow=new Date(now);tomorrow.setDate(tomorrow.getDate()+1);tomorrow.setHours(0,0,0,0);const timeout=setTimeout(()=>{fetchTasks();fetchArchivedStats();// Configurar intervalo diario después del primer timeout\nconst interval=setInterval(()=>{fetchTasks();fetchArchivedStats();},24*60*60*1000);return()=>clearInterval(interval);},tomorrow.getTime()-now.getTime());return()=>clearTimeout(timeout);},[]);useEffect(()=>{filterTasks();},[searchTerm,tasks]);const filterTasks=()=>{if(!searchTerm.trim()){setFilteredTasks(tasks);return;}const term=searchTerm.toLowerCase().trim();const filtered=tasks.filter(task=>{var _task$title,_task$client_name,_task$description;const titleMatch=(_task$title=task.title)===null||_task$title===void 0?void 0:_task$title.toLowerCase().includes(term);const clientMatch=(_task$client_name=task.client_name)===null||_task$client_name===void 0?void 0:_task$client_name.toLowerCase().includes(term);const descriptionMatch=(_task$description=task.description)===null||_task$description===void 0?void 0:_task$description.toLowerCase().includes(term);return titleMatch||clientMatch||descriptionMatch;});setFilteredTasks(filtered);};const clearSearch=()=>{setSearchTerm('');setFilteredTasks(tasks);};const fetchTasks=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/tasks\"));setTasks(response.data);if(!searchTerm.trim()){setFilteredTasks(response.data);}}catch(error){console.error('Error fetching tasks:',error);}};const fetchArchivedTasks=async function(){let year=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;let month=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;try{let url=\"\".concat(API_URL,\"/tasks/archived\");const params=[];if(year)params.push(\"year=\".concat(year));if(month)params.push(\"month=\".concat(month));if(params.length>0)url+=\"?\".concat(params.join('&'));const response=await axios.get(url);setArchivedTasks(response.data);}catch(error){console.error('Error fetching archived tasks:',error);}};const fetchArchivedStats=async()=>{try{const response=await axios.get(\"\".concat(API_URL,\"/tasks/archived/stats\"));setArchivedStats(response.data);}catch(error){console.error('Error fetching archived stats:',error);}};const fetchPayments=async taskId=>{try{const response=await axios.get(\"\".concat(API_URL,\"/tasks/\").concat(taskId,\"/payments\"));setPayments(response.data);}catch(error){console.error('Error fetching payments:',error);}};const restoreTask=async taskId=>{if(window.confirm('¿Deseas restaurar esta tarea a \"En Proceso\"?')){try{await axios.patch(\"\".concat(API_URL,\"/tasks/\").concat(taskId,\"/restore\"),{newStatus:'en_proceso'});fetchTasks();fetchArchivedTasks(selectedArchiveFilter.year,selectedArchiveFilter.month);fetchArchivedStats();}catch(error){console.error('Error restoring task:',error);}}};const toggleArchiveMonth=yearMonth=>{setExpandedArchiveMonths(prev=>_objectSpread(_objectSpread({},prev),{},{[yearMonth]:!prev[yearMonth]}));// Cargar tareas archivadas para ese mes si se expande\nif(!expandedArchiveMonths[yearMonth]){const[year,month]=yearMonth.split('-');fetchArchivedTasks(year,month);setSelectedArchiveFilter({year,month});}};const openArchivedView=()=>{setShowArchivedModal(true);fetchArchivedTasks();};const handleSubmit=async()=>{try{if(editingTask){await axios.put(\"\".concat(API_URL,\"/tasks/\").concat(editingTask.id),formData);for(const payment of tempPayments){await axios.post(\"\".concat(API_URL,\"/tasks/\").concat(editingTask.id,\"/payments\"),payment);}}else{const taskData=_objectSpread({},formData);if(tempPayments.length>0){taskData.initial_payment=tempPayments[0];}const response=await axios.post(\"\".concat(API_URL,\"/tasks\"),taskData);for(let i=1;i<tempPayments.length;i++){await axios.post(\"\".concat(API_URL,\"/tasks/\").concat(response.data.id,\"/payments\"),tempPayments[i]);}}fetchTasks();closeModal();}catch(error){console.error('Error saving task:',error);}};const handleDelete=async id=>{if(window.confirm('¿Estás seguro de eliminar esta tarea?')){try{await axios.delete(\"\".concat(API_URL,\"/tasks/\").concat(id));fetchTasks();}catch(error){console.error('Error deleting task:',error);}}};const openModal=async function(){let task=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(task){setEditingTask(task);setFormData({title:task.title,client_name:task.client_name,price:task.price,status:task.status,description:task.description||'',due_date:task.due_date?task.due_date.split('T')[0]:''});await fetchPayments(task.id);setTempPayments([]);}else{setEditingTask(null);setFormData({title:'',client_name:'',price:0,status:'cotizacion',description:'',due_date:''});setPayments([]);setTempPayments([]);}setShowModal(true);};const closeModal=()=>{setShowModal(false);setEditingTask(null);setTempPayments([]);setPayments([]);};const addTempPayment=()=>{if(newPayment.amount&&newPayment.amount>0){setTempPayments([...tempPayments,_objectSpread(_objectSpread({},newPayment),{},{amount:parseFloat(newPayment.amount)})]);setNewPayment({amount:'',payment_date:new Date().toISOString().split('T')[0],notes:''});}};const removeTempPayment=index=>{setTempPayments(tempPayments.filter((_,i)=>i!==index));};const deleteExistingPayment=async paymentId=>{if(window.confirm('¿Estás seguro de eliminar este abono?')){try{await axios.delete(\"\".concat(API_URL,\"/payments/\").concat(paymentId));await fetchPayments(editingTask.id);fetchTasks();}catch(error){console.error('Error deleting payment:',error);}}};const openPaymentModal=async task=>{setSelectedTaskForPayment(task);await fetchPayments(task.id);setShowPaymentModal(true);};const addPaymentToExistingTask=async()=>{if(newPayment.amount&&newPayment.amount>0){try{await axios.post(\"\".concat(API_URL,\"/tasks/\").concat(selectedTaskForPayment.id,\"/payments\"),_objectSpread(_objectSpread({},newPayment),{},{amount:parseFloat(newPayment.amount)}));await fetchPayments(selectedTaskForPayment.id);fetchTasks();setNewPayment({amount:'',payment_date:new Date().toISOString().split('T')[0],notes:''});}catch(error){console.error('Error adding payment:',error);}}};const handleDragStart=(e,task)=>{e.dataTransfer.setData('taskId',task.id);};const handleDragOver=e=>{e.preventDefault();};const handleDrop=async(e,newStatus)=>{e.preventDefault();const taskId=e.dataTransfer.getData('taskId');try{await axios.patch(\"\".concat(API_URL,\"/tasks/\").concat(taskId,\"/status\"),{status:newStatus});fetchTasks();}catch(error){console.error('Error updating task status:',error);}};const getTasksByStatus=status=>{return filteredTasks.filter(task=>task.status===status);};const calculateRemaining=task=>{const total=parseFloat(task.price||0);const paid=parseFloat(task.total_advance_payment||0);return total-paid;};const calculateDaysRemaining=dueDate=>{if(!dueDate)return null;const today=new Date();today.setHours(0,0,0,0);const due=new Date(dueDate);due.setHours(0,0,0,0);const diffTime=due-today;const diffDays=Math.ceil(diffTime/(1000*60*60*24));return diffDays;};const getUrgencyColor=days=>{if(days===null)return'#9ca3af';if(days<0)return'#991b1b';if(days<=7)return'#dc2626';if(days<=14)return'#f97316';return'#16a34a';};const getProgressBarStyle=(days,totalDays)=>{if(days===null||totalDays===null||totalDays<=0)return{width:'100%',background:'#e5e7eb'};const percentage=Math.max(0,Math.min(100,(totalDays-days)/totalDays*100));const color=getUrgencyColor(days);return{width:\"\".concat(percentage,\"%\"),background:color,transition:'all 0.3s ease'};};const getPendingTasksSortedByDeadline=()=>{return filteredTasks.filter(task=>task.status!=='terminado'&&task.status!=='entregado').map(task=>_objectSpread(_objectSpread({},task),{},{daysRemaining:calculateDaysRemaining(task.due_date),totalDays:task.due_date?calculateDaysRemaining(task.created_at)+calculateDaysRemaining(task.due_date):null})).sort((a,b)=>{if(a.daysRemaining===null)return 1;if(b.daysRemaining===null)return-1;return a.daysRemaining-b.daysRemaining;});};const TaskCard=_ref2=>{let{task,isArchived=false}=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"task-card \".concat(isArchived?'archived':''),draggable:!isArchived,onDragStart:!isArchived?e=>handleDragStart(e,task):undefined,children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-title\",children:task.title}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-client\",children:[\"Cliente: \",task.client_name]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-price\",children:/*#__PURE__*/_jsxs(\"span\",{children:[\"Total: $\",parseFloat(task.price).toFixed(2)]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-payments-info\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"payment-badge\",children:[\"Abonado: $\",parseFloat(task.total_advance_payment||0).toFixed(2)]}),/*#__PURE__*/_jsxs(\"span\",{className:\"payment-badge \".concat(calculateRemaining(task)<=0?'paid':'pending'),children:[\"Saldo: $\",calculateRemaining(task).toFixed(2)]})]}),task.payment_count>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"payment-count\",children:[task.payment_count,\" abono\",task.payment_count>1?'s':'']}),task.due_date&&/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'12px',color:'#6b7280',marginTop:'5px'},children:[\"Fecha: \",new Date(task.due_date).toLocaleDateString()]}),task.delivered_date&&/*#__PURE__*/_jsxs(\"div\",{className:\"delivered-info\",children:[\"Entregado: \",new Date(task.delivered_date).toLocaleDateString(),task.days_since_delivery&&/*#__PURE__*/_jsxs(\"span\",{className:\"days-badge\",children:[\"Hace \",Math.floor(task.days_since_delivery),\" d\\xEDas\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"task-actions\",children:isArchived?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"restore-btn\",onClick:()=>restoreTask(task.id),children:/*#__PURE__*/_jsx(RotateCcw,{size:14})}),/*#__PURE__*/_jsx(\"button\",{className:\"view-btn\",onClick:()=>openModal(task),children:/*#__PURE__*/_jsx(Eye,{size:14})})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{className:\"payment-btn\",onClick:e=>{e.stopPropagation();openPaymentModal(task);},children:/*#__PURE__*/_jsx(DollarSign,{size:14})}),/*#__PURE__*/_jsx(\"button\",{className:\"edit-btn\",onClick:()=>openModal(task),children:/*#__PURE__*/_jsx(Edit2,{size:14})}),/*#__PURE__*/_jsx(\"button\",{className:\"delete-btn\",onClick:()=>handleDelete(task.id),children:/*#__PURE__*/_jsx(Trash2,{size:14})})]})})]});};const KanbanView=()=>/*#__PURE__*/_jsx(\"div\",{className:\"kanban-board\",children:Object.keys(statusLabels).map(status=>/*#__PURE__*/_jsxs(\"div\",{className:\"kanban-column\",onDragOver:handleDragOver,onDrop:e=>handleDrop(e,status),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"column-header \".concat(status),children:[statusLabels[status],\" (\",getTasksByStatus(status).length,\")\",status==='entregado'&&/*#__PURE__*/_jsx(\"span\",{className:\"header-note\",children:\"(Visible por 48h)\"})]}),getTasksByStatus(status).map(task=>/*#__PURE__*/_jsx(TaskCard,{task:task},task.id))]},status))});const CalendarView=()=>{const tileContent=_ref3=>{let{date}=_ref3;const dayTasks=filteredTasks.filter(task=>{if(!task.due_date)return false;const taskDate=new Date(task.due_date);return taskDate.toDateString()===date.toDateString();});return dayTasks.length>0?/*#__PURE__*/_jsx(\"div\",{children:dayTasks.map(task=>/*#__PURE__*/_jsx(\"div\",{className:\"task-calendar-item\",children:task.title},task.id))}):null;};return/*#__PURE__*/_jsx(\"div\",{className:\"calendar-view\",children:/*#__PURE__*/_jsx(\"div\",{className:\"calendar-container\",children:/*#__PURE__*/_jsx(Calendar,{tileContent:tileContent,value:new Date()})})});};const DeadlineView=()=>{const pendingTasks=getPendingTasksSortedByDeadline();return/*#__PURE__*/_jsx(\"div\",{className:\"deadline-view\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-list\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Tareas Pendientes por Plazo de Entrega\"}),pendingTasks.length===0?/*#__PURE__*/_jsx(\"div\",{className:\"no-tasks\",children:searchTerm?'No se encontraron tareas pendientes con los criterios de búsqueda':'No hay tareas pendientes con fecha de entrega'}):pendingTasks.map(task=>{const daysRemaining=task.daysRemaining;const urgencyColor=getUrgencyColor(daysRemaining);const isOverdue=daysRemaining!==null&&daysRemaining<0;return/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-item\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-task-info\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-task-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:task.title}),/*#__PURE__*/_jsx(\"span\",{className:\"status-badge \".concat(task.status),children:statusLabels[task.status]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-task-details\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"client-name\",children:task.client_name}),task.due_date&&/*#__PURE__*/_jsxs(\"span\",{className:\"due-date\",children:[\"Entrega: \",new Date(task.due_date).toLocaleDateString()]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar-fill\",style:getProgressBarStyle(daysRemaining,task.totalDays)})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-days-remaining\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"days-display\",style:{backgroundColor:urgencyColor,color:'white'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"days-number\",children:daysRemaining===null?'Sin fecha':isOverdue?\"\".concat(Math.abs(daysRemaining)):daysRemaining}),/*#__PURE__*/_jsx(\"div\",{className:\"days-label\",children:daysRemaining===null?'':isOverdue?'días vencido':daysRemaining===1?'día':'días'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn\",onClick:()=>openModal(task),title:\"Editar tarea\",children:/*#__PURE__*/_jsx(Edit2,{size:16})}),/*#__PURE__*/_jsx(\"button\",{className:\"icon-btn payment\",onClick:()=>openPaymentModal(task),title:\"Gestionar abonos\",children:/*#__PURE__*/_jsx(DollarSign,{size:16})})]})]})]},task.id);})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"deadline-legend\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Leyenda de Colores\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#991b1b'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Vencido\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#dc2626'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Urgente (\\u2264 7 d\\xEDas)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#f97316'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Pronto (8-14 d\\xEDas)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#16a34a'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Con tiempo (> 14 d\\xEDas)\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:'#9ca3af'}}),/*#__PURE__*/_jsx(\"span\",{children:\"Sin fecha definida\"})]})]})]})});};const SearchBar=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"search-wrapper\",children:[/*#__PURE__*/_jsx(Search,{className:\"search-icon\",size:20}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"search-input\",placeholder:\"Buscar por t\\xEDtulo o cliente...\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),searchTerm&&/*#__PURE__*/_jsx(\"button\",{className:\"search-clear\",onClick:clearSearch,children:/*#__PURE__*/_jsx(X,{size:18})})]}),searchTerm&&/*#__PURE__*/_jsxs(\"div\",{className:\"search-results-info\",children:[\"Encontradas: \",filteredTasks.length,\" de \",tasks.length,\" tareas\"]})]});const ArchivedModal=()=>{// Agrupar tareas archivadas por año y mes\nconst groupedArchived=archivedStats.reduce((acc,stat)=>{const year=stat.year;if(!acc[year])acc[year]=[];acc[year].push(stat);return acc;},{});return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal archived-modal\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"archived-header\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(Archive,{size:24}),\"Tareas Archivadas\"]}),/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:()=>setShowArchivedModal(false),children:/*#__PURE__*/_jsx(X,{size:20})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"archived-content\",children:Object.keys(groupedArchived).length===0?/*#__PURE__*/_jsxs(\"div\",{className:\"no-archived\",children:[/*#__PURE__*/_jsx(Archive,{size:48}),/*#__PURE__*/_jsx(\"p\",{children:\"No hay tareas archivadas a\\xFAn\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Las tareas entregadas se archivan autom\\xE1ticamente despu\\xE9s de 48 horas\"})]}):Object.entries(groupedArchived).map(_ref4=>{let[year,yearStats]=_ref4;return/*#__PURE__*/_jsxs(\"div\",{className:\"archived-year\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"year-header\",children:year}),yearStats.map(stat=>{const monthKey=\"\".concat(stat.year,\"-\").concat(stat.month);const isExpanded=expandedArchiveMonths[monthKey];const monthName=months[parseInt(stat.month)-1];return/*#__PURE__*/_jsxs(\"div\",{className:\"archived-month\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"month-header\",onClick:()=>toggleArchiveMonth(monthKey),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"month-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"month-name\",children:monthName}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-stats\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"stat-badge\",children:[stat.count,\" tareas\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"stat-badge revenue\",children:[\"$\",parseFloat(stat.total_revenue||0).toFixed(2)]})]})]}),isExpanded?/*#__PURE__*/_jsx(ChevronUp,{size:20}):/*#__PURE__*/_jsx(ChevronDown,{size:20})]}),isExpanded&&/*#__PURE__*/_jsx(\"div\",{className:\"archived-tasks-list\",children:archivedTasks.filter(task=>{const taskDate=new Date(task.delivered_date);return taskDate.getFullYear()===parseInt(year)&&taskDate.getMonth()+1===parseInt(stat.month);}).map(task=>/*#__PURE__*/_jsx(TaskCard,{task:task,isArchived:true},task.id))})]},monthKey);})]},year);})})]})});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Gestor de Tareas\"}),/*#__PURE__*/_jsx(SearchBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-controls\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"view-toggles\",children:[/*#__PURE__*/_jsxs(\"button\",{className:view==='kanban'?'active':'',onClick:()=>setView('kanban'),children:[/*#__PURE__*/_jsx(Layout,{size:16}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Tablero\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:view==='calendar'?'active':'',onClick:()=>setView('calendar'),children:[/*#__PURE__*/_jsx(CalendarIcon,{size:16}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Calendario\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:view==='deadlines'?'active':'',onClick:()=>setView('deadlines'),children:[/*#__PURE__*/_jsx(Clock,{size:16}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Plazos\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"archive-btn\",onClick:openArchivedView,children:[/*#__PURE__*/_jsx(Archive,{size:20}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Archivados\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"add-task-btn\",onClick:()=>openModal(),children:[/*#__PURE__*/_jsx(Plus,{size:20}),/*#__PURE__*/_jsx(\"span\",{className:\"btn-text\",children:\"Nueva Tarea\"})]})]})]})]}),view==='kanban'&&/*#__PURE__*/_jsx(KanbanView,{}),view==='calendar'&&/*#__PURE__*/_jsx(CalendarView,{}),view==='deadlines'&&/*#__PURE__*/_jsx(DeadlineView,{}),showArchivedModal&&/*#__PURE__*/_jsx(ArchivedModal,{}),showModal&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal modal-large\",children:[/*#__PURE__*/_jsx(\"h2\",{children:editingTask?'Editar Tarea':'Nueva Tarea'}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"T\\xEDtulo *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.title,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{title:e.target.value})),required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre del Cliente *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:formData.client_name,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{client_name:e.target.value})),required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Precio Total\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",value:formData.price,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{price:parseFloat(e.target.value)}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Estado\"}),/*#__PURE__*/_jsx(\"select\",{value:formData.status,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{status:e.target.value})),children:Object.entries(statusLabels).map(_ref5=>{let[value,label]=_ref5;return/*#__PURE__*/_jsx(\"option\",{value:value,children:label},value);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Fecha de Entrega\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:formData.due_date,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{due_date:e.target.value}))})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payments-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Registro de Abonos\"}),editingTask&&payments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"existing-payments\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Abonos Registrados\"}),payments.map(payment=>/*#__PURE__*/_jsxs(\"div\",{className:\"payment-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",parseFloat(payment.amount).toFixed(2)]}),/*#__PURE__*/_jsx(\"span\",{children:new Date(payment.payment_date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{children:payment.notes||'Sin notas'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-btn\",onClick:()=>deleteExistingPayment(payment.id),children:/*#__PURE__*/_jsx(X,{size:14})})]},payment.id)),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-summary\",children:[\"Total Abonado: $\",payments.reduce((sum,p)=>sum+parseFloat(p.amount),0).toFixed(2)]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-payment-form\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Agregar Nuevo Abono\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-input-group\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",placeholder:\"Monto\",value:newPayment.amount,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{amount:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:newPayment.payment_date,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{payment_date:e.target.value}))}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Notas (opcional)\",value:newPayment.notes,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{notes:e.target.value}))}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"add-payment-btn\",onClick:addTempPayment,children:/*#__PURE__*/_jsx(Plus,{size:16})})]})]}),tempPayments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"temp-payments\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Abonos por Agregar\"}),tempPayments.map((payment,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"payment-item temp\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",parseFloat(payment.amount).toFixed(2)]}),/*#__PURE__*/_jsx(\"span\",{children:new Date(payment.payment_date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{children:payment.notes||'Sin notas'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-btn\",onClick:()=>removeTempPayment(index),children:/*#__PURE__*/_jsx(X,{size:14})})]},index)),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-summary\",children:[\"Total a Agregar: $\",tempPayments.reduce((sum,p)=>sum+p.amount,0).toFixed(2)]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Descripci\\xF3n\"}),/*#__PURE__*/_jsx(\"textarea\",{value:formData.description,onChange:e=>setFormData(_objectSpread(_objectSpread({},formData),{},{description:e.target.value}))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-btn\",onClick:closeModal,children:\"Cancelar\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"save-btn\",onClick:handleSubmit,children:editingTask?'Actualizar':'Guardar'})]})]})]})}),showPaymentModal&&selectedTaskForPayment&&/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsxs(\"h2\",{children:[\"Gesti\\xF3n de Abonos - \",selectedTaskForPayment.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"payment-modal-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Cliente: \",selectedTaskForPayment.client_name]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Total: $\",parseFloat(selectedTaskForPayment.price).toFixed(2)]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Saldo: $\",calculateRemaining(selectedTaskForPayment).toFixed(2)]})]}),payments.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"existing-payments\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Historial de Abonos\"}),payments.map(payment=>/*#__PURE__*/_jsxs(\"div\",{className:\"payment-item\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"$\",parseFloat(payment.amount).toFixed(2)]}),/*#__PURE__*/_jsx(\"span\",{children:new Date(payment.payment_date).toLocaleDateString()}),/*#__PURE__*/_jsx(\"span\",{children:payment.notes||'Sin notas'}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"remove-btn\",onClick:()=>deleteExistingPayment(payment.id),children:/*#__PURE__*/_jsx(X,{size:14})})]},payment.id))]}),/*#__PURE__*/_jsxs(\"div\",{className:\"new-payment-form\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Registrar Nuevo Abono\"}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"number\",step:\"0.01\",placeholder:\"Monto\",value:newPayment.amount,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{amount:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:newPayment.payment_date,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{payment_date:e.target.value}))})}),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Notas (opcional)\",value:newPayment.notes,onChange:e=>setNewPayment(_objectSpread(_objectSpread({},newPayment),{},{notes:e.target.value}))})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"save-btn\",onClick:addPaymentToExistingTask,children:\"Agregar Abono\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"modal-actions\",children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"cancel-btn\",onClick:()=>{setShowPaymentModal(false);setSelectedTaskForPayment(null);setNewPayment({amount:'',payment_date:new Date().toISOString().split('T')[0],notes:''});},children:\"Cerrar\"})})]})})]});}export default TaskManager;","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","Plus","Edit2","Trash2","CalendarIcon","Layout","X","DollarSign","Clock","Search","Archive","ChevronDown","ChevronUp","Eye","RotateCcw","Filter","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_URL","statusLabels","cotizacion","en_proceso","terminado","entregado","months","TaskManager","_ref","updateTabData","tasks","setTasks","filteredTasks","setFilteredTasks","archivedTasks","setArchivedTasks","archivedStats","setArchivedStats","searchTerm","setSearchTerm","view","setView","showModal","setShowModal","showPaymentModal","setShowPaymentModal","showArchivedModal","setShowArchivedModal","editingTask","setEditingTask","selectedTaskForPayment","setSelectedTaskForPayment","payments","setPayments","expandedArchiveMonths","setExpandedArchiveMonths","selectedArchiveFilter","setSelectedArchiveFilter","year","month","formData","setFormData","title","client_name","price","status","description","due_date","tempPayments","setTempPayments","newPayment","setNewPayment","amount","payment_date","Date","toISOString","split","notes","fetchTasks","fetchArchivedStats","now","tomorrow","setDate","getDate","setHours","timeout","setTimeout","interval","setInterval","clearInterval","getTime","clearTimeout","filterTasks","trim","term","toLowerCase","filtered","filter","task","_task$title","_task$client_name","_task$description","titleMatch","includes","clientMatch","descriptionMatch","clearSearch","response","get","concat","data","error","console","fetchArchivedTasks","arguments","length","undefined","url","params","push","join","fetchPayments","taskId","restoreTask","window","confirm","patch","newStatus","toggleArchiveMonth","yearMonth","prev","_objectSpread","openArchivedView","handleSubmit","put","id","payment","post","taskData","initial_payment","i","closeModal","handleDelete","delete","openModal","addTempPayment","parseFloat","removeTempPayment","index","_","deleteExistingPayment","paymentId","openPaymentModal","addPaymentToExistingTask","handleDragStart","e","dataTransfer","setData","handleDragOver","preventDefault","handleDrop","getData","getTasksByStatus","calculateRemaining","total","paid","total_advance_payment","calculateDaysRemaining","dueDate","today","due","diffTime","diffDays","Math","ceil","getUrgencyColor","days","getProgressBarStyle","totalDays","width","background","percentage","max","min","color","transition","getPendingTasksSortedByDeadline","map","daysRemaining","created_at","sort","a","b","TaskCard","_ref2","isArchived","className","draggable","onDragStart","children","toFixed","payment_count","style","fontSize","marginTop","toLocaleDateString","delivered_date","days_since_delivery","floor","onClick","size","stopPropagation","KanbanView","Object","keys","onDragOver","onDrop","CalendarView","tileContent","_ref3","date","dayTasks","taskDate","toDateString","value","DeadlineView","pendingTasks","urgencyColor","isOverdue","backgroundColor","abs","SearchBar","type","placeholder","onChange","target","ArchivedModal","groupedArchived","reduce","acc","stat","entries","_ref4","yearStats","monthKey","isExpanded","monthName","parseInt","count","total_revenue","getFullYear","getMonth","required","step","_ref5","label","sum","p"],"sources":["C:/Users/Silvia/WebstormProjects/TASK/task-manager/frontend/src/TaskManager.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Calendar from 'react-calendar';\r\nimport {\r\n    Plus, Edit2, Trash2, Calendar as CalendarIcon,\r\n    Layout, X, DollarSign, Clock, Search, Archive,\r\n    ChevronDown, ChevronUp, Eye, RotateCcw, Filter\r\n} from 'lucide-react';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nconst API_URL = 'http://localhost:3001/api';\r\n\r\nconst statusLabels = {\r\n    cotizacion: 'Cotización',\r\n    en_proceso: 'En Proceso',\r\n    terminado: 'Terminado',\r\n    entregado: 'Entregado'\r\n};\r\n\r\nconst months = [\r\n    'Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio',\r\n    'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'\r\n];\r\n\r\nfunction TaskManager({ updateTabData }) {\r\n    const [tasks, setTasks] = useState([]);\r\n    const [filteredTasks, setFilteredTasks] = useState([]);\r\n    const [archivedTasks, setArchivedTasks] = useState([]);\r\n    const [archivedStats, setArchivedStats] = useState([]);\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [view, setView] = useState('kanban');\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showPaymentModal, setShowPaymentModal] = useState(false);\r\n    const [showArchivedModal, setShowArchivedModal] = useState(false);\r\n    const [editingTask, setEditingTask] = useState(null);\r\n    const [selectedTaskForPayment, setSelectedTaskForPayment] = useState(null);\r\n    const [payments, setPayments] = useState([]);\r\n    const [expandedArchiveMonths, setExpandedArchiveMonths] = useState({});\r\n    const [selectedArchiveFilter, setSelectedArchiveFilter] = useState({ year: null, month: null });\r\n    const [formData, setFormData] = useState({\r\n        title: '',\r\n        client_name: '',\r\n        price: 0,\r\n        status: 'cotizacion',\r\n        description: '',\r\n        due_date: ''\r\n    });\r\n    const [tempPayments, setTempPayments] = useState([]);\r\n    const [newPayment, setNewPayment] = useState({\r\n        amount: '',\r\n        payment_date: new Date().toISOString().split('T')[0],\r\n        notes: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n        fetchArchivedStats();\r\n\r\n        // Actualizar cada día a medianoche\r\n        const now = new Date();\r\n        const tomorrow = new Date(now);\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n        tomorrow.setHours(0, 0, 0, 0);\r\n\r\n        const timeout = setTimeout(() => {\r\n            fetchTasks();\r\n            fetchArchivedStats();\r\n            // Configurar intervalo diario después del primer timeout\r\n            const interval = setInterval(() => {\r\n                fetchTasks();\r\n                fetchArchivedStats();\r\n            }, 24 * 60 * 60 * 1000);\r\n            return () => clearInterval(interval);\r\n        }, tomorrow.getTime() - now.getTime());\r\n\r\n        return () => clearTimeout(timeout);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        filterTasks();\r\n    }, [searchTerm, tasks]);\r\n\r\n    const filterTasks = () => {\r\n        if (!searchTerm.trim()) {\r\n            setFilteredTasks(tasks);\r\n            return;\r\n        }\r\n\r\n        const term = searchTerm.toLowerCase().trim();\r\n        const filtered = tasks.filter(task => {\r\n            const titleMatch = task.title?.toLowerCase().includes(term);\r\n            const clientMatch = task.client_name?.toLowerCase().includes(term);\r\n            const descriptionMatch = task.description?.toLowerCase().includes(term);\r\n            return titleMatch || clientMatch || descriptionMatch;\r\n        });\r\n\r\n        setFilteredTasks(filtered);\r\n    };\r\n\r\n    const clearSearch = () => {\r\n        setSearchTerm('');\r\n        setFilteredTasks(tasks);\r\n    };\r\n\r\n    const fetchTasks = async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/tasks`);\r\n            setTasks(response.data);\r\n            if (!searchTerm.trim()) {\r\n                setFilteredTasks(response.data);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching tasks:', error);\r\n        }\r\n    };\r\n\r\n    const fetchArchivedTasks = async (year = null, month = null) => {\r\n        try {\r\n            let url = `${API_URL}/tasks/archived`;\r\n            const params = [];\r\n            if (year) params.push(`year=${year}`);\r\n            if (month) params.push(`month=${month}`);\r\n            if (params.length > 0) url += `?${params.join('&')}`;\r\n\r\n            const response = await axios.get(url);\r\n            setArchivedTasks(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching archived tasks:', error);\r\n        }\r\n    };\r\n\r\n    const fetchArchivedStats = async () => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/tasks/archived/stats`);\r\n            setArchivedStats(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching archived stats:', error);\r\n        }\r\n    };\r\n\r\n    const fetchPayments = async (taskId) => {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/tasks/${taskId}/payments`);\r\n            setPayments(response.data);\r\n        } catch (error) {\r\n            console.error('Error fetching payments:', error);\r\n        }\r\n    };\r\n\r\n    const restoreTask = async (taskId) => {\r\n        if (window.confirm('¿Deseas restaurar esta tarea a \"En Proceso\"?')) {\r\n            try {\r\n                await axios.patch(`${API_URL}/tasks/${taskId}/restore`, {\r\n                    newStatus: 'en_proceso'\r\n                });\r\n                fetchTasks();\r\n                fetchArchivedTasks(selectedArchiveFilter.year, selectedArchiveFilter.month);\r\n                fetchArchivedStats();\r\n            } catch (error) {\r\n                console.error('Error restoring task:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleArchiveMonth = (yearMonth) => {\r\n        setExpandedArchiveMonths(prev => ({\r\n            ...prev,\r\n            [yearMonth]: !prev[yearMonth]\r\n        }));\r\n\r\n        // Cargar tareas archivadas para ese mes si se expande\r\n        if (!expandedArchiveMonths[yearMonth]) {\r\n            const [year, month] = yearMonth.split('-');\r\n            fetchArchivedTasks(year, month);\r\n            setSelectedArchiveFilter({ year, month });\r\n        }\r\n    };\r\n\r\n    const openArchivedView = () => {\r\n        setShowArchivedModal(true);\r\n        fetchArchivedTasks();\r\n    };\r\n\r\n    const handleSubmit = async () => {\r\n        try {\r\n            if (editingTask) {\r\n                await axios.put(`${API_URL}/tasks/${editingTask.id}`, formData);\r\n\r\n                for (const payment of tempPayments) {\r\n                    await axios.post(`${API_URL}/tasks/${editingTask.id}/payments`, payment);\r\n                }\r\n            } else {\r\n                const taskData = { ...formData };\r\n                if (tempPayments.length > 0) {\r\n                    taskData.initial_payment = tempPayments[0];\r\n                }\r\n                const response = await axios.post(`${API_URL}/tasks`, taskData);\r\n\r\n                for (let i = 1; i < tempPayments.length; i++) {\r\n                    await axios.post(`${API_URL}/tasks/${response.data.id}/payments`, tempPayments[i]);\r\n                }\r\n            }\r\n            fetchTasks();\r\n            closeModal();\r\n        } catch (error) {\r\n            console.error('Error saving task:', error);\r\n        }\r\n    };\r\n\r\n    const handleDelete = async (id) => {\r\n        if (window.confirm('¿Estás seguro de eliminar esta tarea?')) {\r\n            try {\r\n                await axios.delete(`${API_URL}/tasks/${id}`);\r\n                fetchTasks();\r\n            } catch (error) {\r\n                console.error('Error deleting task:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const openModal = async (task = null) => {\r\n        if (task) {\r\n            setEditingTask(task);\r\n            setFormData({\r\n                title: task.title,\r\n                client_name: task.client_name,\r\n                price: task.price,\r\n                status: task.status,\r\n                description: task.description || '',\r\n                due_date: task.due_date ? task.due_date.split('T')[0] : ''\r\n            });\r\n            await fetchPayments(task.id);\r\n            setTempPayments([]);\r\n        } else {\r\n            setEditingTask(null);\r\n            setFormData({\r\n                title: '',\r\n                client_name: '',\r\n                price: 0,\r\n                status: 'cotizacion',\r\n                description: '',\r\n                due_date: ''\r\n            });\r\n            setPayments([]);\r\n            setTempPayments([]);\r\n        }\r\n        setShowModal(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setEditingTask(null);\r\n        setTempPayments([]);\r\n        setPayments([]);\r\n    };\r\n\r\n    const addTempPayment = () => {\r\n        if (newPayment.amount && newPayment.amount > 0) {\r\n            setTempPayments([...tempPayments, { ...newPayment, amount: parseFloat(newPayment.amount) }]);\r\n            setNewPayment({\r\n                amount: '',\r\n                payment_date: new Date().toISOString().split('T')[0],\r\n                notes: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    const removeTempPayment = (index) => {\r\n        setTempPayments(tempPayments.filter((_, i) => i !== index));\r\n    };\r\n\r\n    const deleteExistingPayment = async (paymentId) => {\r\n        if (window.confirm('¿Estás seguro de eliminar este abono?')) {\r\n            try {\r\n                await axios.delete(`${API_URL}/payments/${paymentId}`);\r\n                await fetchPayments(editingTask.id);\r\n                fetchTasks();\r\n            } catch (error) {\r\n                console.error('Error deleting payment:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const openPaymentModal = async (task) => {\r\n        setSelectedTaskForPayment(task);\r\n        await fetchPayments(task.id);\r\n        setShowPaymentModal(true);\r\n    };\r\n\r\n    const addPaymentToExistingTask = async () => {\r\n        if (newPayment.amount && newPayment.amount > 0) {\r\n            try {\r\n                await axios.post(`${API_URL}/tasks/${selectedTaskForPayment.id}/payments`, {\r\n                    ...newPayment,\r\n                    amount: parseFloat(newPayment.amount)\r\n                });\r\n                await fetchPayments(selectedTaskForPayment.id);\r\n                fetchTasks();\r\n                setNewPayment({\r\n                    amount: '',\r\n                    payment_date: new Date().toISOString().split('T')[0],\r\n                    notes: ''\r\n                });\r\n            } catch (error) {\r\n                console.error('Error adding payment:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDragStart = (e, task) => {\r\n        e.dataTransfer.setData('taskId', task.id);\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const handleDrop = async (e, newStatus) => {\r\n        e.preventDefault();\r\n        const taskId = e.dataTransfer.getData('taskId');\r\n\r\n        try {\r\n            await axios.patch(`${API_URL}/tasks/${taskId}/status`, { status: newStatus });\r\n            fetchTasks();\r\n        } catch (error) {\r\n            console.error('Error updating task status:', error);\r\n        }\r\n    };\r\n\r\n    const getTasksByStatus = (status) => {\r\n        return filteredTasks.filter(task => task.status === status);\r\n    };\r\n\r\n    const calculateRemaining = (task) => {\r\n        const total = parseFloat(task.price || 0);\r\n        const paid = parseFloat(task.total_advance_payment || 0);\r\n        return total - paid;\r\n    };\r\n\r\n    const calculateDaysRemaining = (dueDate) => {\r\n        if (!dueDate) return null;\r\n\r\n        const today = new Date();\r\n        today.setHours(0, 0, 0, 0);\r\n\r\n        const due = new Date(dueDate);\r\n        due.setHours(0, 0, 0, 0);\r\n\r\n        const diffTime = due - today;\r\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n        return diffDays;\r\n    };\r\n\r\n    const getUrgencyColor = (days) => {\r\n        if (days === null) return '#9ca3af';\r\n        if (days < 0) return '#991b1b';\r\n        if (days <= 7) return '#dc2626';\r\n        if (days <= 14) return '#f97316';\r\n        return '#16a34a';\r\n    };\r\n\r\n    const getProgressBarStyle = (days, totalDays) => {\r\n        if (days === null || totalDays === null || totalDays <= 0) return { width: '100%', background: '#e5e7eb' };\r\n\r\n        const percentage = Math.max(0, Math.min(100, ((totalDays - days) / totalDays) * 100));\r\n        const color = getUrgencyColor(days);\r\n\r\n        return {\r\n            width: `${percentage}%`,\r\n            background: color,\r\n            transition: 'all 0.3s ease'\r\n        };\r\n    };\r\n\r\n    const getPendingTasksSortedByDeadline = () => {\r\n        return filteredTasks\r\n            .filter(task => task.status !== 'terminado' && task.status !== 'entregado')\r\n            .map(task => ({\r\n                ...task,\r\n                daysRemaining: calculateDaysRemaining(task.due_date),\r\n                totalDays: task.due_date ? calculateDaysRemaining(task.created_at) + calculateDaysRemaining(task.due_date) : null\r\n            }))\r\n            .sort((a, b) => {\r\n                if (a.daysRemaining === null) return 1;\r\n                if (b.daysRemaining === null) return -1;\r\n                return a.daysRemaining - b.daysRemaining;\r\n            });\r\n    };\r\n\r\n    const TaskCard = ({ task, isArchived = false }) => (\r\n        <div\r\n            className={`task-card ${isArchived ? 'archived' : ''}`}\r\n            draggable={!isArchived}\r\n            onDragStart={!isArchived ? (e) => handleDragStart(e, task) : undefined}\r\n        >\r\n            <div className=\"task-title\">{task.title}</div>\r\n            <div className=\"task-client\">Cliente: {task.client_name}</div>\r\n            <div className=\"task-price\">\r\n                <span>Total: ${parseFloat(task.price).toFixed(2)}</span>\r\n            </div>\r\n            <div className=\"task-payments-info\">\r\n                <span className=\"payment-badge\">\r\n                    Abonado: ${parseFloat(task.total_advance_payment || 0).toFixed(2)}\r\n                </span>\r\n                <span className={`payment-badge ${calculateRemaining(task) <= 0 ? 'paid' : 'pending'}`}>\r\n                    Saldo: ${calculateRemaining(task).toFixed(2)}\r\n                </span>\r\n            </div>\r\n            {task.payment_count > 0 && (\r\n                <div className=\"payment-count\">\r\n                    {task.payment_count} abono{task.payment_count > 1 ? 's' : ''}\r\n                </div>\r\n            )}\r\n            {task.due_date && (\r\n                <div style={{ fontSize: '12px', color: '#6b7280', marginTop: '5px' }}>\r\n                    Fecha: {new Date(task.due_date).toLocaleDateString()}\r\n                </div>\r\n            )}\r\n            {task.delivered_date && (\r\n                <div className=\"delivered-info\">\r\n                    Entregado: {new Date(task.delivered_date).toLocaleDateString()}\r\n                    {task.days_since_delivery && (\r\n                        <span className=\"days-badge\">\r\n                            Hace {Math.floor(task.days_since_delivery)} días\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            )}\r\n            <div className=\"task-actions\">\r\n                {isArchived ? (\r\n                    <>\r\n                        <button className=\"restore-btn\" onClick={() => restoreTask(task.id)}>\r\n                            <RotateCcw size={14} />\r\n                        </button>\r\n                        <button className=\"view-btn\" onClick={() => openModal(task)}>\r\n                            <Eye size={14} />\r\n                        </button>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <button className=\"payment-btn\" onClick={(e) => {\r\n                            e.stopPropagation();\r\n                            openPaymentModal(task);\r\n                        }}>\r\n                            <DollarSign size={14} />\r\n                        </button>\r\n                        <button className=\"edit-btn\" onClick={() => openModal(task)}>\r\n                            <Edit2 size={14} />\r\n                        </button>\r\n                        <button className=\"delete-btn\" onClick={() => handleDelete(task.id)}>\r\n                            <Trash2 size={14} />\r\n                        </button>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n    const KanbanView = () => (\r\n        <div className=\"kanban-board\">\r\n            {Object.keys(statusLabels).map(status => (\r\n                <div\r\n                    key={status}\r\n                    className=\"kanban-column\"\r\n                    onDragOver={handleDragOver}\r\n                    onDrop={(e) => handleDrop(e, status)}\r\n                >\r\n                    <div className={`column-header ${status}`}>\r\n                        {statusLabels[status]} ({getTasksByStatus(status).length})\r\n                        {status === 'entregado' && (\r\n                            <span className=\"header-note\">\r\n                                (Visible por 48h)\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                    {getTasksByStatus(status).map(task => (\r\n                        <TaskCard key={task.id} task={task} />\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n\r\n    const CalendarView = () => {\r\n        const tileContent = ({ date }) => {\r\n            const dayTasks = filteredTasks.filter(task => {\r\n                if (!task.due_date) return false;\r\n                const taskDate = new Date(task.due_date);\r\n                return taskDate.toDateString() === date.toDateString();\r\n            });\r\n\r\n            return dayTasks.length > 0 ? (\r\n                <div>\r\n                    {dayTasks.map(task => (\r\n                        <div key={task.id} className=\"task-calendar-item\">\r\n                            {task.title}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            ) : null;\r\n        };\r\n\r\n        return (\r\n            <div className=\"calendar-view\">\r\n                <div className=\"calendar-container\">\r\n                    <Calendar\r\n                        tileContent={tileContent}\r\n                        value={new Date()}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const DeadlineView = () => {\r\n        const pendingTasks = getPendingTasksSortedByDeadline();\r\n\r\n        return (\r\n            <div className=\"deadline-view\">\r\n                <div className=\"deadline-container\">\r\n                    <div className=\"deadline-list\">\r\n                        <h2>Tareas Pendientes por Plazo de Entrega</h2>\r\n                        {pendingTasks.length === 0 ? (\r\n                            <div className=\"no-tasks\">\r\n                                {searchTerm ?\r\n                                    'No se encontraron tareas pendientes con los criterios de búsqueda' :\r\n                                    'No hay tareas pendientes con fecha de entrega'\r\n                                }\r\n                            </div>\r\n                        ) : (\r\n                            pendingTasks.map(task => {\r\n                                const daysRemaining = task.daysRemaining;\r\n                                const urgencyColor = getUrgencyColor(daysRemaining);\r\n                                const isOverdue = daysRemaining !== null && daysRemaining < 0;\r\n\r\n                                return (\r\n                                    <div key={task.id} className=\"deadline-item\">\r\n                                        <div className=\"deadline-task-info\">\r\n                                            <div className=\"deadline-task-header\">\r\n                                                <h3>{task.title}</h3>\r\n                                                <span className={`status-badge ${task.status}`}>\r\n                                                    {statusLabels[task.status]}\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className=\"deadline-task-details\">\r\n                                                <span className=\"client-name\">{task.client_name}</span>\r\n                                                {task.due_date && (\r\n                                                    <span className=\"due-date\">\r\n                                                        Entrega: {new Date(task.due_date).toLocaleDateString()}\r\n                                                    </span>\r\n                                                )}\r\n                                            </div>\r\n                                            <div className=\"progress-bar-container\">\r\n                                                <div\r\n                                                    className=\"progress-bar-fill\"\r\n                                                    style={getProgressBarStyle(daysRemaining, task.totalDays)}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"deadline-days-remaining\">\r\n                                            <div\r\n                                                className=\"days-display\"\r\n                                                style={{\r\n                                                    backgroundColor: urgencyColor,\r\n                                                    color: 'white'\r\n                                                }}\r\n                                            >\r\n                                                <div className=\"days-number\">\r\n                                                    {daysRemaining === null ?\r\n                                                        'Sin fecha' :\r\n                                                        isOverdue ?\r\n                                                            `${Math.abs(daysRemaining)}` :\r\n                                                            daysRemaining\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"days-label\">\r\n                                                    {daysRemaining === null ?\r\n                                                        '' :\r\n                                                        isOverdue ?\r\n                                                            'días vencido' :\r\n                                                            daysRemaining === 1 ?\r\n                                                                'día' :\r\n                                                                'días'\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"deadline-actions\">\r\n                                                <button\r\n                                                    className=\"icon-btn\"\r\n                                                    onClick={() => openModal(task)}\r\n                                                    title=\"Editar tarea\"\r\n                                                >\r\n                                                    <Edit2 size={16} />\r\n                                                </button>\r\n                                                <button\r\n                                                    className=\"icon-btn payment\"\r\n                                                    onClick={() => openPaymentModal(task)}\r\n                                                    title=\"Gestionar abonos\"\r\n                                                >\r\n                                                    <DollarSign size={16} />\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        )}\r\n                    </div>\r\n                    <div className=\"deadline-legend\">\r\n                        <h3>Leyenda de Colores</h3>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color\" style={{ backgroundColor: '#991b1b' }}></div>\r\n                            <span>Vencido</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color\" style={{ backgroundColor: '#dc2626' }}></div>\r\n                            <span>Urgente (≤ 7 días)</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color\" style={{ backgroundColor: '#f97316' }}></div>\r\n                            <span>Pronto (8-14 días)</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color\" style={{ backgroundColor: '#16a34a' }}></div>\r\n                            <span>Con tiempo (> 14 días)</span>\r\n                        </div>\r\n                        <div className=\"legend-item\">\r\n                            <div className=\"legend-color\" style={{ backgroundColor: '#9ca3af' }}></div>\r\n                            <span>Sin fecha definida</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const SearchBar = () => (\r\n        <div className=\"search-container\">\r\n            <div className=\"search-wrapper\">\r\n                <Search className=\"search-icon\" size={20} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"search-input\"\r\n                    placeholder=\"Buscar por título o cliente...\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                {searchTerm && (\r\n                    <button className=\"search-clear\" onClick={clearSearch}>\r\n                        <X size={18} />\r\n                    </button>\r\n                )}\r\n            </div>\r\n            {searchTerm && (\r\n                <div className=\"search-results-info\">\r\n                    Encontradas: {filteredTasks.length} de {tasks.length} tareas\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n    const ArchivedModal = () => {\r\n        // Agrupar tareas archivadas por año y mes\r\n        const groupedArchived = archivedStats.reduce((acc, stat) => {\r\n            const year = stat.year;\r\n            if (!acc[year]) acc[year] = [];\r\n            acc[year].push(stat);\r\n            return acc;\r\n        }, {});\r\n\r\n        return (\r\n            <div className=\"modal-overlay\">\r\n                <div className=\"modal archived-modal\">\r\n                    <div className=\"archived-header\">\r\n                        <h2>\r\n                            <Archive size={24} />\r\n                            Tareas Archivadas\r\n                        </h2>\r\n                        <button className=\"close-btn\" onClick={() => setShowArchivedModal(false)}>\r\n                            <X size={20} />\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"archived-content\">\r\n                        {Object.keys(groupedArchived).length === 0 ? (\r\n                            <div className=\"no-archived\">\r\n                                <Archive size={48} />\r\n                                <p>No hay tareas archivadas aún</p>\r\n                                <span>Las tareas entregadas se archivan automáticamente después de 48 horas</span>\r\n                            </div>\r\n                        ) : (\r\n                            Object.entries(groupedArchived).map(([year, yearStats]) => (\r\n                                <div key={year} className=\"archived-year\">\r\n                                    <h3 className=\"year-header\">{year}</h3>\r\n                                    {yearStats.map(stat => {\r\n                                        const monthKey = `${stat.year}-${stat.month}`;\r\n                                        const isExpanded = expandedArchiveMonths[monthKey];\r\n                                        const monthName = months[parseInt(stat.month) - 1];\r\n\r\n                                        return (\r\n                                            <div key={monthKey} className=\"archived-month\">\r\n                                                <button\r\n                                                    className=\"month-header\"\r\n                                                    onClick={() => toggleArchiveMonth(monthKey)}\r\n                                                >\r\n                                                    <div className=\"month-info\">\r\n                                                        <span className=\"month-name\">{monthName}</span>\r\n                                                        <div className=\"month-stats\">\r\n                                                            <span className=\"stat-badge\">{stat.count} tareas</span>\r\n                                                            <span className=\"stat-badge revenue\">\r\n                                                                ${parseFloat(stat.total_revenue || 0).toFixed(2)}\r\n                                                            </span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    {isExpanded ? <ChevronUp size={20} /> : <ChevronDown size={20} />}\r\n                                                </button>\r\n\r\n                                                {isExpanded && (\r\n                                                    <div className=\"archived-tasks-list\">\r\n                                                        {archivedTasks\r\n                                                            .filter(task => {\r\n                                                                const taskDate = new Date(task.delivered_date);\r\n                                                                return taskDate.getFullYear() === parseInt(year) &&\r\n                                                                    taskDate.getMonth() + 1 === parseInt(stat.month);\r\n                                                            })\r\n                                                            .map(task => (\r\n                                                                <TaskCard\r\n                                                                    key={task.id}\r\n                                                                    task={task}\r\n                                                                    isArchived={true}\r\n                                                                />\r\n                                                            ))}\r\n                                                    </div>\r\n                                                )}\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"header\">\r\n                <h1>Gestor de Tareas</h1>\r\n\r\n                <SearchBar />\r\n\r\n                <div className=\"header-controls\">\r\n                    <div className=\"view-toggles\">\r\n                        <button\r\n                            className={view === 'kanban' ? 'active' : ''}\r\n                            onClick={() => setView('kanban')}\r\n                        >\r\n                            <Layout size={16} />\r\n                            <span className=\"btn-text\">Tablero</span>\r\n                        </button>\r\n                        <button\r\n                            className={view === 'calendar' ? 'active' : ''}\r\n                            onClick={() => setView('calendar')}\r\n                        >\r\n                            <CalendarIcon size={16} />\r\n                            <span className=\"btn-text\">Calendario</span>\r\n                        </button>\r\n                        <button\r\n                            className={view === 'deadlines' ? 'active' : ''}\r\n                            onClick={() => setView('deadlines')}\r\n                        >\r\n                            <Clock size={16} />\r\n                            <span className=\"btn-text\">Plazos</span>\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"header-actions\">\r\n                        <button className=\"archive-btn\" onClick={openArchivedView}>\r\n                            <Archive size={20} />\r\n                            <span className=\"btn-text\">Archivados</span>\r\n                        </button>\r\n                        <button className=\"add-task-btn\" onClick={() => openModal()}>\r\n                            <Plus size={20} />\r\n                            <span className=\"btn-text\">Nueva Tarea</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {view === 'kanban' && <KanbanView />}\r\n            {view === 'calendar' && <CalendarView />}\r\n            {view === 'deadlines' && <DeadlineView />}\r\n\r\n            {/* Modal de Archivados */}\r\n            {showArchivedModal && <ArchivedModal />}\r\n\r\n            {/* Modal de Tarea */}\r\n            {showModal && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal modal-large\">\r\n                        <h2>{editingTask ? 'Editar Tarea' : 'Nueva Tarea'}</h2>\r\n                        <div className=\"form-container\">\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Título *</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={formData.title}\r\n                                        onChange={(e) => setFormData({...formData, title: e.target.value})}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Nombre del Cliente *</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        value={formData.client_name}\r\n                                        onChange={(e) => setFormData({...formData, client_name: e.target.value})}\r\n                                        required\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"form-group\">\r\n                                    <label>Precio Total</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        value={formData.price}\r\n                                        onChange={(e) => setFormData({...formData, price: parseFloat(e.target.value)})}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Estado</label>\r\n                                    <select\r\n                                        value={formData.status}\r\n                                        onChange={(e) => setFormData({...formData, status: e.target.value})}\r\n                                    >\r\n                                        {Object.entries(statusLabels).map(([value, label]) => (\r\n                                            <option key={value} value={value}>{label}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>Fecha de Entrega</label>\r\n                                    <input\r\n                                        type=\"date\"\r\n                                        value={formData.due_date}\r\n                                        onChange={(e) => setFormData({...formData, due_date: e.target.value})}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            {/* Sección de Abonos */}\r\n                            <div className=\"payments-section\">\r\n                                <h3>Registro de Abonos</h3>\r\n\r\n                                {/* Abonos existentes (solo en modo edición) */}\r\n                                {editingTask && payments.length > 0 && (\r\n                                    <div className=\"existing-payments\">\r\n                                        <h4>Abonos Registrados</h4>\r\n                                        {payments.map((payment) => (\r\n                                            <div key={payment.id} className=\"payment-item\">\r\n                                                <span>${parseFloat(payment.amount).toFixed(2)}</span>\r\n                                                <span>{new Date(payment.payment_date).toLocaleDateString()}</span>\r\n                                                <span>{payment.notes || 'Sin notas'}</span>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"remove-btn\"\r\n                                                    onClick={() => deleteExistingPayment(payment.id)}\r\n                                                >\r\n                                                    <X size={14} />\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"payment-summary\">\r\n                                            Total Abonado: ${payments.reduce((sum, p) => sum + parseFloat(p.amount), 0).toFixed(2)}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Formulario para nuevo abono */}\r\n                                <div className=\"new-payment-form\">\r\n                                    <h4>Agregar Nuevo Abono</h4>\r\n                                    <div className=\"payment-input-group\">\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            step=\"0.01\"\r\n                                            placeholder=\"Monto\"\r\n                                            value={newPayment.amount}\r\n                                            onChange={(e) => setNewPayment({...newPayment, amount: e.target.value})}\r\n                                        />\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={newPayment.payment_date}\r\n                                            onChange={(e) => setNewPayment({...newPayment, payment_date: e.target.value})}\r\n                                        />\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"Notas (opcional)\"\r\n                                            value={newPayment.notes}\r\n                                            onChange={(e) => setNewPayment({...newPayment, notes: e.target.value})}\r\n                                        />\r\n                                        <button type=\"button\" className=\"add-payment-btn\" onClick={addTempPayment}>\r\n                                            <Plus size={16} />\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Abonos temporales (pendientes de guardar) */}\r\n                                {tempPayments.length > 0 && (\r\n                                    <div className=\"temp-payments\">\r\n                                        <h4>Abonos por Agregar</h4>\r\n                                        {tempPayments.map((payment, index) => (\r\n                                            <div key={index} className=\"payment-item temp\">\r\n                                                <span>${parseFloat(payment.amount).toFixed(2)}</span>\r\n                                                <span>{new Date(payment.payment_date).toLocaleDateString()}</span>\r\n                                                <span>{payment.notes || 'Sin notas'}</span>\r\n                                                <button\r\n                                                    type=\"button\"\r\n                                                    className=\"remove-btn\"\r\n                                                    onClick={() => removeTempPayment(index)}\r\n                                                >\r\n                                                    <X size={14} />\r\n                                                </button>\r\n                                            </div>\r\n                                        ))}\r\n                                        <div className=\"payment-summary\">\r\n                                            Total a Agregar: ${tempPayments.reduce((sum, p) => sum + p.amount, 0).toFixed(2)}\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Descripción</label>\r\n                                <textarea\r\n                                    value={formData.description}\r\n                                    onChange={(e) => setFormData({...formData, description: e.target.value})}\r\n                                />\r\n                            </div>\r\n                            <div className=\"modal-actions\">\r\n                                <button type=\"button\" className=\"cancel-btn\" onClick={closeModal}>\r\n                                    Cancelar\r\n                                </button>\r\n                                <button type=\"button\" className=\"save-btn\" onClick={handleSubmit}>\r\n                                    {editingTask ? 'Actualizar' : 'Guardar'}\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Modal de Gestión de Abonos Rápida */}\r\n            {showPaymentModal && selectedTaskForPayment && (\r\n                <div className=\"modal-overlay\">\r\n                    <div className=\"modal\">\r\n                        <h2>Gestión de Abonos - {selectedTaskForPayment.title}</h2>\r\n                        <div className=\"payment-modal-info\">\r\n                            <p>Cliente: {selectedTaskForPayment.client_name}</p>\r\n                            <p>Total: ${parseFloat(selectedTaskForPayment.price).toFixed(2)}</p>\r\n                            <p>Saldo: ${calculateRemaining(selectedTaskForPayment).toFixed(2)}</p>\r\n                        </div>\r\n\r\n                        {/* Lista de abonos existentes */}\r\n                        {payments.length > 0 && (\r\n                            <div className=\"existing-payments\">\r\n                                <h4>Historial de Abonos</h4>\r\n                                {payments.map((payment) => (\r\n                                    <div key={payment.id} className=\"payment-item\">\r\n                                        <span>${parseFloat(payment.amount).toFixed(2)}</span>\r\n                                        <span>{new Date(payment.payment_date).toLocaleDateString()}</span>\r\n                                        <span>{payment.notes || 'Sin notas'}</span>\r\n                                        <button\r\n                                            type=\"button\"\r\n                                            className=\"remove-btn\"\r\n                                            onClick={() => deleteExistingPayment(payment.id)}\r\n                                        >\r\n                                            <X size={14} />\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Agregar nuevo abono */}\r\n                        <div className=\"new-payment-form\">\r\n                            <h4>Registrar Nuevo Abono</h4>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"number\"\r\n                                    step=\"0.01\"\r\n                                    placeholder=\"Monto\"\r\n                                    value={newPayment.amount}\r\n                                    onChange={(e) => setNewPayment({...newPayment, amount: e.target.value})}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"date\"\r\n                                    value={newPayment.payment_date}\r\n                                    onChange={(e) => setNewPayment({...newPayment, payment_date: e.target.value})}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    placeholder=\"Notas (opcional)\"\r\n                                    value={newPayment.notes}\r\n                                    onChange={(e) => setNewPayment({...newPayment, notes: e.target.value})}\r\n                                />\r\n                            </div>\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"save-btn\"\r\n                                onClick={addPaymentToExistingTask}\r\n                            >\r\n                                Agregar Abono\r\n                            </button>\r\n                        </div>\r\n\r\n                        <div className=\"modal-actions\">\r\n                            <button\r\n                                type=\"button\"\r\n                                className=\"cancel-btn\"\r\n                                onClick={() => {\r\n                                    setShowPaymentModal(false);\r\n                                    setSelectedTaskForPayment(null);\r\n                                    setNewPayment({\r\n                                        amount: '',\r\n                                        payment_date: new Date().toISOString().split('T')[0],\r\n                                        notes: ''\r\n                                    });\r\n                                }}\r\n                            >\r\n                                Cerrar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TaskManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}