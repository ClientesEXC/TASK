{"ast":null,"code":"// Detectar automÃ¡ticamente la URL del API\nconst getApiUrl = () => {\n  // En producciÃ³n o red local\n  if (process.env.REACT_APP_API_URL) {\n    return process.env.REACT_APP_API_URL;\n  }\n\n  // Detectar si estamos en localhost o en red\n  const hostname = window.location.hostname;\n  if (hostname === 'localhost' || hostname === '127.0.0.1') {\n    return 'http://localhost:3001/api';\n  }\n\n  // Si accedemos por IP, usar esa misma IP para el API\n  return `http://${hostname}:3001/api`;\n};\nexport const API_URL = getApiUrl();\nconsole.log('ðŸ”— API URL configurada:', API_URL);","map":{"version":3,"names":["getApiUrl","process","env","REACT_APP_API_URL","hostname","window","location","API_URL","console","log"],"sources":["C:/Users/Silvia/WebstormProjects/TASK/task-manager/frontend/src/config/api.js"],"sourcesContent":["// Detectar automÃ¡ticamente la URL del API\r\nconst getApiUrl = () => {\r\n    // En producciÃ³n o red local\r\n    if (process.env.REACT_APP_API_URL) {\r\n        return process.env.REACT_APP_API_URL;\r\n    }\r\n\r\n    // Detectar si estamos en localhost o en red\r\n    const hostname = window.location.hostname;\r\n\r\n    if (hostname === 'localhost' || hostname === '127.0.0.1') {\r\n        return 'http://localhost:3001/api';\r\n    }\r\n\r\n    // Si accedemos por IP, usar esa misma IP para el API\r\n    return `http://${hostname}:3001/api`;\r\n};\r\n\r\nexport const API_URL = getApiUrl();\r\n\r\nconsole.log('ðŸ”— API URL configurada:', API_URL);"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAGA,CAAA,KAAM;EACpB;EACA,IAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAE;IAC/B,OAAOF,OAAO,CAACC,GAAG,CAACC,iBAAiB;EACxC;;EAEA;EACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ;EAEzC,IAAIA,QAAQ,KAAK,WAAW,IAAIA,QAAQ,KAAK,WAAW,EAAE;IACtD,OAAO,2BAA2B;EACtC;;EAEA;EACA,OAAO,UAAUA,QAAQ,WAAW;AACxC,CAAC;AAED,OAAO,MAAMG,OAAO,GAAGP,SAAS,CAAC,CAAC;AAElCQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}