{"ast":null,"code":"// Detectar automÃ¡ticamente la URL del API\nconst getApiUrl=()=>{// En producciÃ³n o red local\nif(process.env.REACT_APP_API_URL){return process.env.REACT_APP_API_URL;}// Detectar si estamos en localhost o en red\nconst hostname=window.location.hostname;if(hostname==='localhost'||hostname==='127.0.0.1'){return'http://localhost:3001/api';}// Si accedemos por IP, usar esa misma IP para el API\nreturn\"http://\".concat(hostname,\":3001/api\");};export const API_URL=getApiUrl();console.log('ðŸ”— API URL configurada:',API_URL);","map":{"version":3,"names":["getApiUrl","process","env","REACT_APP_API_URL","hostname","window","location","concat","API_URL","console","log"],"sources":["C:/Users/Silvia/WebstormProjects/TASK/task-manager/frontend/src/config/api.js"],"sourcesContent":["// Detectar automÃ¡ticamente la URL del API\r\nconst getApiUrl = () => {\r\n    // En producciÃ³n o red local\r\n    if (process.env.REACT_APP_API_URL) {\r\n        return process.env.REACT_APP_API_URL;\r\n    }\r\n\r\n    // Detectar si estamos en localhost o en red\r\n    const hostname = window.location.hostname;\r\n\r\n    if (hostname === 'localhost' || hostname === '127.0.0.1') {\r\n        return 'http://localhost:3001/api';\r\n    }\r\n\r\n    // Si accedemos por IP, usar esa misma IP para el API\r\n    return `http://${hostname}:3001/api`;\r\n};\r\n\r\nexport const API_URL = getApiUrl();\r\n\r\nconsole.log('ðŸ”— API URL configurada:', API_URL);"],"mappings":"AAAA;AACA,KAAM,CAAAA,SAAS,CAAGA,CAAA,GAAM,CACpB;AACA,GAAIC,OAAO,CAACC,GAAG,CAACC,iBAAiB,CAAE,CAC/B,MAAO,CAAAF,OAAO,CAACC,GAAG,CAACC,iBAAiB,CACxC,CAEA;AACA,KAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,QAAQ,CAACF,QAAQ,CAEzC,GAAIA,QAAQ,GAAK,WAAW,EAAIA,QAAQ,GAAK,WAAW,CAAE,CACtD,MAAO,2BAA2B,CACtC,CAEA;AACA,gBAAAG,MAAA,CAAiBH,QAAQ,cAC7B,CAAC,CAED,MAAO,MAAM,CAAAI,OAAO,CAAGR,SAAS,CAAC,CAAC,CAElCS,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEF,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}