{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{TrendingUp,Users,DollarSign,CheckCircle,Clock,Package,AlertCircle,Calendar,ArrowRight,Activity,Key,Archive}from'lucide-react';import'./Home.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL='http://localhost:3001/api';function Home(_ref){let{switchToTab}=_ref;const[taskStats,setTaskStats]=useState({total:0,byStatus:{},revenue:0,pendingPayments:0,overdueTasks:0,weekTasks:0});const[rentalStats,setRentalStats]=useState({total:0,active:0,revenue:0,nextReturns:0});const[recentActivities,setRecentActivities]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{fetchDashboardData();const interval=setInterval(fetchDashboardData,60000);// Actualizar cada minuto\nreturn()=>clearInterval(interval);},[]);const fetchDashboardData=async()=>{setLoading(true);try{// Fetch task statistics\nconst tasksResponse=await axios.get(\"\".concat(API_URL,\"/tasks\"));const tasks=tasksResponse.data;// Calcular estadísticas de tareas\nconst stats={total:tasks.length,byStatus:{},revenue:0,pendingPayments:0,overdueTasks:0,weekTasks:0};const statusCounts={cotizacion:0,en_proceso:0,terminado:0,entregado:0};const today=new Date();const weekFromNow=new Date(today.getTime()+7*24*60*60*1000);tasks.forEach(task=>{// Contar por estado\nstatusCounts[task.status]=(statusCounts[task.status]||0)+1;// Calcular ingresos\nstats.revenue+=parseFloat(task.price||0);// Calcular pagos pendientes\nconst pending=parseFloat(task.price||0)-parseFloat(task.total_advance_payment||0);if(pending>0){stats.pendingPayments+=pending;}// Tareas vencidas\nif(task.due_date){const dueDate=new Date(task.due_date);if(dueDate<today&&task.status!=='entregado'&&task.status!=='terminado'){stats.overdueTasks++;}// Tareas de esta semana\nif(dueDate>=today&&dueDate<=weekFromNow){stats.weekTasks++;}}});stats.byStatus=statusCounts;setTaskStats(stats);// Fetch rental statistics (cuando esté implementado)\ntry{const rentalsResponse=await axios.get(\"\".concat(API_URL,\"/rentals/stats\"));setRentalStats(rentalsResponse.data);}catch(error){console.log('Rentals API not yet implemented');}// Generar actividades recientes\ngenerateRecentActivities(tasks);}catch(error){console.error('Error fetching dashboard data:',error);}finally{setLoading(false);}};const generateRecentActivities=tasks=>{const activities=[];// Ordenar tareas por fecha de actualización\nconst sortedTasks=[...tasks].sort((a,b)=>new Date(b.updated_at)-new Date(a.updated_at));// Tomar las 5 más recientes\nsortedTasks.slice(0,5).forEach(task=>{activities.push({id:task.id,type:'task',title:task.title,description:\"\".concat(task.client_name,\" - \").concat(getStatusLabel(task.status)),time:formatTimeAgo(new Date(task.updated_at)),icon:getActivityIcon(task.status),color:getStatusColor(task.status)});});setRecentActivities(activities);};const getStatusLabel=status=>{const labels={cotizacion:'Cotización',en_proceso:'En Proceso',terminado:'Terminado',entregado:'Entregado'};return labels[status]||status;};const getStatusColor=status=>{const colors={cotizacion:'#f59e0b',en_proceso:'#3b82f6',terminado:'#10b981',entregado:'#8b5cf6'};return colors[status]||'#6b7280';};const getActivityIcon=status=>{const icons={cotizacion:AlertCircle,en_proceso:Clock,terminado:CheckCircle,entregado:Package};return icons[status]||Activity;};const formatTimeAgo=date=>{const seconds=Math.floor((new Date()-date)/1000);const intervals={año:31536000,mes:2592000,semana:604800,día:86400,hora:3600,minuto:60};for(const[unit,secondsInUnit]of Object.entries(intervals)){const interval=Math.floor(seconds/secondsInUnit);if(interval>=1){return\"hace \".concat(interval,\" \").concat(unit).concat(interval>1?'s':'');}}return'hace un momento';};const formatCurrency=amount=>{return new Intl.NumberFormat('es-EC',{style:'currency',currency:'USD'}).format(amount);};if(loading){return/*#__PURE__*/_jsxs(\"div\",{className:\"home-loading\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loading-spinner\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Cargando dashboard...\"})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"home-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-section\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\xA1Bienvenido al Sistema de Gesti\\xF3n!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Aqu\\xED tienes un resumen de tu actividad actual\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-section\",children:[/*#__PURE__*/_jsx(Calendar,{size:20}),/*#__PURE__*/_jsx(\"span\",{children:new Date().toLocaleDateString('es-EC',{weekday:'long',year:'numeric',month:'long',day:'numeric'})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stats-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card tasks-total\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsx(CheckCircle,{size:24})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Total Tareas\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stat-value\",children:taskStats.total}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-detail\",children:taskStats.weekTasks>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"badge warning\",children:[taskStats.weekTasks,\" esta semana\"]})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"stat-action\",onClick:()=>switchToTab('tasks'),children:/*#__PURE__*/_jsx(ArrowRight,{size:20})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card revenue\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsx(DollarSign,{size:24})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Ingresos Totales\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stat-value\",children:formatCurrency(taskStats.revenue)}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-detail\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"badge success\",children:[\"Por cobrar: \",formatCurrency(taskStats.pendingPayments)]})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card urgent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsx(AlertCircle,{size:24})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tareas Urgentes\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stat-value\",children:taskStats.overdueTasks}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-detail\",children:taskStats.overdueTasks>0?/*#__PURE__*/_jsx(\"span\",{className:\"badge danger\",children:\"Requieren atenci\\xF3n\"}):/*#__PURE__*/_jsx(\"span\",{className:\"badge success\",children:\"Todo al d\\xEDa\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-card rentals\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"stat-icon\",children:/*#__PURE__*/_jsx(Key,{size:24})}),/*#__PURE__*/_jsxs(\"div\",{className:\"stat-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Alquileres Activos\"}),/*#__PURE__*/_jsx(\"p\",{className:\"stat-value\",children:rentalStats.active||0}),/*#__PURE__*/_jsx(\"div\",{className:\"stat-detail\",children:/*#__PURE__*/_jsxs(\"span\",{className:\"badge info\",children:[\"Total: \",rentalStats.total||0]})})]}),/*#__PURE__*/_jsx(\"button\",{className:\"stat-action\",onClick:()=>switchToTab('rental'),children:/*#__PURE__*/_jsx(ArrowRight,{size:20})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-content\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"content-card task-status-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Estado de Tareas\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"view-all-btn\",onClick:()=>switchToTab('tasks'),children:[\"Ver todas\",/*#__PURE__*/_jsx(ArrowRight,{size:16})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-grid\",children:Object.entries(taskStats.byStatus).map(_ref2=>{let[status,count]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"status-item \".concat(status),style:{'--status-color':getStatusColor(status)},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"status-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-label\",children:getStatusLabel(status)}),/*#__PURE__*/_jsx(\"span\",{className:\"status-count\",children:count})]}),/*#__PURE__*/_jsx(\"div\",{className:\"status-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"status-fill\",style:{width:\"\".concat(count/taskStats.total*100,\"%\"),background:getStatusColor(status)}})}),/*#__PURE__*/_jsx(\"span\",{className:\"status-percentage\",children:taskStats.total>0?\"\".concat(Math.round(count/taskStats.total*100),\"%\"):'0%'})]},status);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-card activities-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Actividad Reciente\"}),/*#__PURE__*/_jsx(Activity,{size:20})]}),/*#__PURE__*/_jsx(\"div\",{className:\"activities-list\",children:recentActivities.length>0?recentActivities.map(activity=>{const Icon=activity.icon;return/*#__PURE__*/_jsxs(\"div\",{className:\"activity-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"activity-icon\",style:{background:\"\".concat(activity.color,\"20\"),color:activity.color},children:/*#__PURE__*/_jsx(Icon,{size:16})}),/*#__PURE__*/_jsxs(\"div\",{className:\"activity-content\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"activity-title\",children:activity.title}),/*#__PURE__*/_jsx(\"p\",{className:\"activity-description\",children:activity.description})]}),/*#__PURE__*/_jsx(\"span\",{className:\"activity-time\",children:activity.time})]},activity.id);}):/*#__PURE__*/_jsxs(\"div\",{className:\"no-activities\",children:[/*#__PURE__*/_jsx(Archive,{size:40}),/*#__PURE__*/_jsx(\"p\",{children:\"No hay actividades recientes\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content-card quick-access-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Acceso R\\xE1pido\"}),/*#__PURE__*/_jsx(TrendingUp,{size:20})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"quick-actions\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"quick-action-btn tasks\",onClick:()=>switchToTab('tasks'),children:[/*#__PURE__*/_jsx(CheckCircle,{size:32}),/*#__PURE__*/_jsx(\"span\",{children:\"Nueva Tarea\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"quick-action-btn rental\",onClick:()=>switchToTab('rental'),children:[/*#__PURE__*/_jsx(Key,{size:32}),/*#__PURE__*/_jsx(\"span\",{children:\"Nuevo Alquiler\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"quick-action-btn calendar\",onClick:()=>switchToTab('tasks'),children:[/*#__PURE__*/_jsx(Calendar,{size:32}),/*#__PURE__*/_jsx(\"span\",{children:\"Ver Calendario\"})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"quick-action-btn reports\",onClick:()=>alert('Reportes en desarrollo'),children:[/*#__PURE__*/_jsx(Activity,{size:32}),/*#__PURE__*/_jsx(\"span\",{children:\"Reportes\"})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"month-summary\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Resumen del Mes\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-grid\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(Users,{size:20}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"summary-label\",children:\"Clientes Activos\"}),/*#__PURE__*/_jsx(\"p\",{className:\"summary-value\",children:new Set(recentActivities.map(a=>{var _a$description;return(_a$description=a.description)===null||_a$description===void 0?void 0:_a$description.split(' - ')[0];})).size})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(TrendingUp,{size:20}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"summary-label\",children:\"Tasa de Completado\"}),/*#__PURE__*/_jsx(\"p\",{className:\"summary-value\",children:taskStats.total>0?\"\".concat(Math.round(((taskStats.byStatus.terminado||0)+(taskStats.byStatus.entregado||0))/taskStats.total*100),\"%\"):'0%'})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(Clock,{size:20}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"summary-label\",children:\"En Proceso\"}),/*#__PURE__*/_jsx(\"p\",{className:\"summary-value\",children:taskStats.byStatus.en_proceso||0})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"summary-item\",children:[/*#__PURE__*/_jsx(DollarSign,{size:20}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"summary-label\",children:\"Proyecci\\xF3n Mensual\"}),/*#__PURE__*/_jsx(\"p\",{className:\"summary-value\",children:formatCurrency(taskStats.revenue*1.2)})]})]})]})]})]});}export default Home;","map":{"version":3,"names":["React","useState","useEffect","axios","TrendingUp","Users","DollarSign","CheckCircle","Clock","Package","AlertCircle","Calendar","ArrowRight","Activity","Key","Archive","jsx","_jsx","jsxs","_jsxs","API_URL","Home","_ref","switchToTab","taskStats","setTaskStats","total","byStatus","revenue","pendingPayments","overdueTasks","weekTasks","rentalStats","setRentalStats","active","nextReturns","recentActivities","setRecentActivities","loading","setLoading","fetchDashboardData","interval","setInterval","clearInterval","tasksResponse","get","concat","tasks","data","stats","length","statusCounts","cotizacion","en_proceso","terminado","entregado","today","Date","weekFromNow","getTime","forEach","task","status","parseFloat","price","pending","total_advance_payment","due_date","dueDate","rentalsResponse","error","console","log","generateRecentActivities","activities","sortedTasks","sort","a","b","updated_at","slice","push","id","type","title","description","client_name","getStatusLabel","time","formatTimeAgo","icon","getActivityIcon","color","getStatusColor","labels","colors","icons","date","seconds","Math","floor","intervals","año","mes","semana","día","hora","minuto","unit","secondsInUnit","Object","entries","formatCurrency","amount","Intl","NumberFormat","style","currency","format","className","children","size","toLocaleDateString","weekday","year","month","day","onClick","map","_ref2","count","width","background","round","activity","Icon","alert","Set","_a$description","split"],"sources":["C:/Users/Silvia/WebstormProjects/TASK/task-manager/frontend/src/Home.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    TrendingUp, Users, DollarSign, CheckCircle,\r\n    Clock, Package, AlertCircle, Calendar,\r\n    ArrowRight, Activity, Key, Archive\r\n} from 'lucide-react';\r\nimport './Home.css';\r\n\r\nconst API_URL = 'http://localhost:3001/api';\r\n\r\nfunction Home({ switchToTab }) {\r\n    const [taskStats, setTaskStats] = useState({\r\n        total: 0,\r\n        byStatus: {},\r\n        revenue: 0,\r\n        pendingPayments: 0,\r\n        overdueTasks: 0,\r\n        weekTasks: 0\r\n    });\r\n\r\n    const [rentalStats, setRentalStats] = useState({\r\n        total: 0,\r\n        active: 0,\r\n        revenue: 0,\r\n        nextReturns: 0\r\n    });\r\n\r\n    const [recentActivities, setRecentActivities] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        fetchDashboardData();\r\n        const interval = setInterval(fetchDashboardData, 60000); // Actualizar cada minuto\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    const fetchDashboardData = async () => {\r\n        setLoading(true);\r\n        try {\r\n            // Fetch task statistics\r\n            const tasksResponse = await axios.get(`${API_URL}/tasks`);\r\n            const tasks = tasksResponse.data;\r\n\r\n            // Calcular estadísticas de tareas\r\n            const stats = {\r\n                total: tasks.length,\r\n                byStatus: {},\r\n                revenue: 0,\r\n                pendingPayments: 0,\r\n                overdueTasks: 0,\r\n                weekTasks: 0\r\n            };\r\n\r\n            const statusCounts = {\r\n                cotizacion: 0,\r\n                en_proceso: 0,\r\n                terminado: 0,\r\n                entregado: 0\r\n            };\r\n\r\n            const today = new Date();\r\n            const weekFromNow = new Date(today.getTime() + 7 * 24 * 60 * 60 * 1000);\r\n\r\n            tasks.forEach(task => {\r\n                // Contar por estado\r\n                statusCounts[task.status] = (statusCounts[task.status] || 0) + 1;\r\n\r\n                // Calcular ingresos\r\n                stats.revenue += parseFloat(task.price || 0);\r\n\r\n                // Calcular pagos pendientes\r\n                const pending = parseFloat(task.price || 0) - parseFloat(task.total_advance_payment || 0);\r\n                if (pending > 0) {\r\n                    stats.pendingPayments += pending;\r\n                }\r\n\r\n                // Tareas vencidas\r\n                if (task.due_date) {\r\n                    const dueDate = new Date(task.due_date);\r\n                    if (dueDate < today && task.status !== 'entregado' && task.status !== 'terminado') {\r\n                        stats.overdueTasks++;\r\n                    }\r\n                    // Tareas de esta semana\r\n                    if (dueDate >= today && dueDate <= weekFromNow) {\r\n                        stats.weekTasks++;\r\n                    }\r\n                }\r\n            });\r\n\r\n            stats.byStatus = statusCounts;\r\n            setTaskStats(stats);\r\n\r\n            // Fetch rental statistics (cuando esté implementado)\r\n            try {\r\n                const rentalsResponse = await axios.get(`${API_URL}/rentals/stats`);\r\n                setRentalStats(rentalsResponse.data);\r\n            } catch (error) {\r\n                console.log('Rentals API not yet implemented');\r\n            }\r\n\r\n            // Generar actividades recientes\r\n            generateRecentActivities(tasks);\r\n\r\n        } catch (error) {\r\n            console.error('Error fetching dashboard data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const generateRecentActivities = (tasks) => {\r\n        const activities = [];\r\n\r\n        // Ordenar tareas por fecha de actualización\r\n        const sortedTasks = [...tasks].sort((a, b) =>\r\n            new Date(b.updated_at) - new Date(a.updated_at)\r\n        );\r\n\r\n        // Tomar las 5 más recientes\r\n        sortedTasks.slice(0, 5).forEach(task => {\r\n            activities.push({\r\n                id: task.id,\r\n                type: 'task',\r\n                title: task.title,\r\n                description: `${task.client_name} - ${getStatusLabel(task.status)}`,\r\n                time: formatTimeAgo(new Date(task.updated_at)),\r\n                icon: getActivityIcon(task.status),\r\n                color: getStatusColor(task.status)\r\n            });\r\n        });\r\n\r\n        setRecentActivities(activities);\r\n    };\r\n\r\n    const getStatusLabel = (status) => {\r\n        const labels = {\r\n            cotizacion: 'Cotización',\r\n            en_proceso: 'En Proceso',\r\n            terminado: 'Terminado',\r\n            entregado: 'Entregado'\r\n        };\r\n        return labels[status] || status;\r\n    };\r\n\r\n    const getStatusColor = (status) => {\r\n        const colors = {\r\n            cotizacion: '#f59e0b',\r\n            en_proceso: '#3b82f6',\r\n            terminado: '#10b981',\r\n            entregado: '#8b5cf6'\r\n        };\r\n        return colors[status] || '#6b7280';\r\n    };\r\n\r\n    const getActivityIcon = (status) => {\r\n        const icons = {\r\n            cotizacion: AlertCircle,\r\n            en_proceso: Clock,\r\n            terminado: CheckCircle,\r\n            entregado: Package\r\n        };\r\n        return icons[status] || Activity;\r\n    };\r\n\r\n    const formatTimeAgo = (date) => {\r\n        const seconds = Math.floor((new Date() - date) / 1000);\r\n        const intervals = {\r\n            año: 31536000,\r\n            mes: 2592000,\r\n            semana: 604800,\r\n            día: 86400,\r\n            hora: 3600,\r\n            minuto: 60\r\n        };\r\n\r\n        for (const [unit, secondsInUnit] of Object.entries(intervals)) {\r\n            const interval = Math.floor(seconds / secondsInUnit);\r\n            if (interval >= 1) {\r\n                return `hace ${interval} ${unit}${interval > 1 ? 's' : ''}`;\r\n            }\r\n        }\r\n        return 'hace un momento';\r\n    };\r\n\r\n    const formatCurrency = (amount) => {\r\n        return new Intl.NumberFormat('es-EC', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n        }).format(amount);\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"home-loading\">\r\n                <div className=\"loading-spinner\"></div>\r\n                <p>Cargando dashboard...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-container\">\r\n            {/* Header del Dashboard */}\r\n            <div className=\"dashboard-header\">\r\n                <div className=\"welcome-section\">\r\n                    <h1>¡Bienvenido al Sistema de Gestión!</h1>\r\n                    <p>Aquí tienes un resumen de tu actividad actual</p>\r\n                </div>\r\n                <div className=\"date-section\">\r\n                    <Calendar size={20} />\r\n                    <span>{new Date().toLocaleDateString('es-EC', {\r\n                        weekday: 'long',\r\n                        year: 'numeric',\r\n                        month: 'long',\r\n                        day: 'numeric'\r\n                    })}</span>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Estadísticas Principales */}\r\n            <div className=\"stats-grid\">\r\n                {/* Tarjetas de Tareas */}\r\n                <div className=\"stat-card tasks-total\">\r\n                    <div className=\"stat-icon\">\r\n                        <CheckCircle size={24} />\r\n                    </div>\r\n                    <div className=\"stat-content\">\r\n                        <h3>Total Tareas</h3>\r\n                        <p className=\"stat-value\">{taskStats.total}</p>\r\n                        <div className=\"stat-detail\">\r\n                            {taskStats.weekTasks > 0 && (\r\n                                <span className=\"badge warning\">\r\n                                    {taskStats.weekTasks} esta semana\r\n                                </span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        className=\"stat-action\"\r\n                        onClick={() => switchToTab('tasks')}\r\n                    >\r\n                        <ArrowRight size={20} />\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"stat-card revenue\">\r\n                    <div className=\"stat-icon\">\r\n                        <DollarSign size={24} />\r\n                    </div>\r\n                    <div className=\"stat-content\">\r\n                        <h3>Ingresos Totales</h3>\r\n                        <p className=\"stat-value\">{formatCurrency(taskStats.revenue)}</p>\r\n                        <div className=\"stat-detail\">\r\n                            <span className=\"badge success\">\r\n                                Por cobrar: {formatCurrency(taskStats.pendingPayments)}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"stat-card urgent\">\r\n                    <div className=\"stat-icon\">\r\n                        <AlertCircle size={24} />\r\n                    </div>\r\n                    <div className=\"stat-content\">\r\n                        <h3>Tareas Urgentes</h3>\r\n                        <p className=\"stat-value\">{taskStats.overdueTasks}</p>\r\n                        <div className=\"stat-detail\">\r\n                            {taskStats.overdueTasks > 0 ? (\r\n                                <span className=\"badge danger\">Requieren atención</span>\r\n                            ) : (\r\n                                <span className=\"badge success\">Todo al día</span>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"stat-card rentals\">\r\n                    <div className=\"stat-icon\">\r\n                        <Key size={24} />\r\n                    </div>\r\n                    <div className=\"stat-content\">\r\n                        <h3>Alquileres Activos</h3>\r\n                        <p className=\"stat-value\">{rentalStats.active || 0}</p>\r\n                        <div className=\"stat-detail\">\r\n                            <span className=\"badge info\">\r\n                                Total: {rentalStats.total || 0}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                    <button\r\n                        className=\"stat-action\"\r\n                        onClick={() => switchToTab('rental')}\r\n                    >\r\n                        <ArrowRight size={20} />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Sección de contenido principal */}\r\n            <div className=\"dashboard-content\">\r\n                {/* Estado de Tareas */}\r\n                <div className=\"content-card task-status-card\">\r\n                    <div className=\"card-header\">\r\n                        <h2>Estado de Tareas</h2>\r\n                        <button\r\n                            className=\"view-all-btn\"\r\n                            onClick={() => switchToTab('tasks')}\r\n                        >\r\n                            Ver todas\r\n                            <ArrowRight size={16} />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"status-grid\">\r\n                        {Object.entries(taskStats.byStatus).map(([status, count]) => (\r\n                            <div\r\n                                key={status}\r\n                                className={`status-item ${status}`}\r\n                                style={{ '--status-color': getStatusColor(status) }}\r\n                            >\r\n                                <div className=\"status-header\">\r\n                                    <span className=\"status-label\">{getStatusLabel(status)}</span>\r\n                                    <span className=\"status-count\">{count}</span>\r\n                                </div>\r\n                                <div className=\"status-bar\">\r\n                                    <div\r\n                                        className=\"status-fill\"\r\n                                        style={{\r\n                                            width: `${(count / taskStats.total) * 100}%`,\r\n                                            background: getStatusColor(status)\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <span className=\"status-percentage\">\r\n                                    {taskStats.total > 0 ?\r\n                                        `${Math.round((count / taskStats.total) * 100)}%` :\r\n                                        '0%'\r\n                                    }\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Actividades Recientes */}\r\n                <div className=\"content-card activities-card\">\r\n                    <div className=\"card-header\">\r\n                        <h2>Actividad Reciente</h2>\r\n                        <Activity size={20} />\r\n                    </div>\r\n                    <div className=\"activities-list\">\r\n                        {recentActivities.length > 0 ? (\r\n                            recentActivities.map((activity) => {\r\n                                const Icon = activity.icon;\r\n                                return (\r\n                                    <div key={activity.id} className=\"activity-item\">\r\n                                        <div\r\n                                            className=\"activity-icon\"\r\n                                            style={{ background: `${activity.color}20`, color: activity.color }}\r\n                                        >\r\n                                            <Icon size={16} />\r\n                                        </div>\r\n                                        <div className=\"activity-content\">\r\n                                            <p className=\"activity-title\">{activity.title}</p>\r\n                                            <p className=\"activity-description\">{activity.description}</p>\r\n                                        </div>\r\n                                        <span className=\"activity-time\">{activity.time}</span>\r\n                                    </div>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <div className=\"no-activities\">\r\n                                <Archive size={40} />\r\n                                <p>No hay actividades recientes</p>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Panel de Acceso Rápido */}\r\n                <div className=\"content-card quick-access-card\">\r\n                    <div className=\"card-header\">\r\n                        <h2>Acceso Rápido</h2>\r\n                        <TrendingUp size={20} />\r\n                    </div>\r\n                    <div className=\"quick-actions\">\r\n                        <button\r\n                            className=\"quick-action-btn tasks\"\r\n                            onClick={() => switchToTab('tasks')}\r\n                        >\r\n                            <CheckCircle size={32} />\r\n                            <span>Nueva Tarea</span>\r\n                        </button>\r\n                        <button\r\n                            className=\"quick-action-btn rental\"\r\n                            onClick={() => switchToTab('rental')}\r\n                        >\r\n                            <Key size={32} />\r\n                            <span>Nuevo Alquiler</span>\r\n                        </button>\r\n                        <button\r\n                            className=\"quick-action-btn calendar\"\r\n                            onClick={() => switchToTab('tasks')}\r\n                        >\r\n                            <Calendar size={32} />\r\n                            <span>Ver Calendario</span>\r\n                        </button>\r\n                        <button\r\n                            className=\"quick-action-btn reports\"\r\n                            onClick={() => alert('Reportes en desarrollo')}\r\n                        >\r\n                            <Activity size={32} />\r\n                            <span>Reportes</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* Resumen del Mes */}\r\n            <div className=\"month-summary\">\r\n                <h2>Resumen del Mes</h2>\r\n                <div className=\"summary-grid\">\r\n                    <div className=\"summary-item\">\r\n                        <Users size={20} />\r\n                        <div>\r\n                            <p className=\"summary-label\">Clientes Activos</p>\r\n                            <p className=\"summary-value\">\r\n                                {new Set(recentActivities.map(a => a.description?.split(' - ')[0])).size}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"summary-item\">\r\n                        <TrendingUp size={20} />\r\n                        <div>\r\n                            <p className=\"summary-label\">Tasa de Completado</p>\r\n                            <p className=\"summary-value\">\r\n                                {taskStats.total > 0 ?\r\n                                    `${Math.round(((taskStats.byStatus.terminado || 0) + (taskStats.byStatus.entregado || 0)) / taskStats.total * 100)}%` :\r\n                                    '0%'\r\n                                }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"summary-item\">\r\n                        <Clock size={20} />\r\n                        <div>\r\n                            <p className=\"summary-label\">En Proceso</p>\r\n                            <p className=\"summary-value\">{taskStats.byStatus.en_proceso || 0}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"summary-item\">\r\n                        <DollarSign size={20} />\r\n                        <div>\r\n                            <p className=\"summary-label\">Proyección Mensual</p>\r\n                            <p className=\"summary-value\">\r\n                                {formatCurrency(taskStats.revenue * 1.2)}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}